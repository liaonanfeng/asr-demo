<?xml version="1.0" encoding="UTF-8"?>
<configuration  debug="false" scan="false" scanPeriod="1000 seconds">
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <property name="LOG_HOME" value="/home/web/logs" />
    <property name="PROJECT_PATH" value="asr-demo" />
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>


    <appender name="file-info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--
        将日志文件格式中的"%i"去掉。因为TimeBasedRollingPolicy是按日期分隔文件的，不需要这个%i,这个按文件大小分隔文件时才会使用。
        如果使用ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"策略时，就需要这个%i了
        -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_PATH}/${PROJECT_PATH}-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <!--<maxFileSize>30M</maxFileSize>-->
            <maxHistory>10</maxHistory>
            <!-- 单个日志文件最大值，达到之后就进行切割 -->
            <maxFileSize>100MB</maxFileSize>
            <!-- 日志文件总体的最大值，达到之后就不再产生日志 -->
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{3} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger Line:%-3L - %msg%n%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <append>true</append>
        <prudent>false</prudent>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <level>INFO</level>
<!--            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>-->
        </filter>
    </appender>

    <appender name="file-error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_PATH}/${PROJECT_PATH}-error-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->

            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{3} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger Line:%-3L - %msg%n%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <append>true</append>
        <prudent>false</prudent>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <appender name="file-debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_PATH}/${PROJECT_PATH}-debug-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->

            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{3} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger Line:%-3L - %msg%n%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <append>true</append>
        <prudent>false</prudent>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="file-warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_PATH}/${PROJECT_PATH}-warn-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->

            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{3} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger Line:%-3L - %msg%n%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <append>true</append>
        <prudent>false</prudent>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!-- 异步输出 -->
    <!--<appender name ="ASYNC_ERROR" class= "ch.qos.logback.classic.AsyncAppender">
        &lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;
        <discardingThreshold >0</discardingThreshold>
        &lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;
        <queueSize>512</queueSize>
        &lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;
        <appender-ref ref="file-error" />
    </appender>
    <appender name ="ASYNC_INFO" class= "ch.qos.logback.classic.AsyncAppender">
        &lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;
        <discardingThreshold >0</discardingThreshold>
        &lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;
        <queueSize>512</queueSize>
        &lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;
        <appender-ref ref="file-info" />
    </appender>
    <appender name ="ASYNC_WARN" class= "ch.qos.logback.classic.AsyncAppender">
        &lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;
        <discardingThreshold >0</discardingThreshold>
        &lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;
        <queueSize>512</queueSize>
        &lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;
        <appender-ref ref="file-warn" />
    </appender>-->

    <!-- DAL统一日志 -->
    <logger name="com.ewt360.asr.dal" level="DEBUG" additivity="false">
        <appender-ref ref="file-info"/>
        <appender-ref ref="console" />
    </logger>

    <!--测试-->
    <springProfile name="local,dev,test,stable,sit">
        <root level="WARN">
            <appender-ref ref="file-warn" />
            <appender-ref ref="console" />
        </root>
        <root level="ERROR">
            <appender-ref ref="file-error" />
            <appender-ref ref="console" />
        </root>
        <root level="INFO">
            <appender-ref ref="file-info" />
            <appender-ref ref="console" />
        </root>
    </springProfile>

    <!-- 生产环境. -->
    <springProfile name="pre,prod">

        <!--<root level="debug">
            <appender-ref ref="file-debug" />
            <appender-ref ref="file-error" />
            <appender-ref ref="file-info" />
            <appender-ref ref="file-warn" />

        </root>-->
        <root level="WARN">
            <appender-ref ref="file-warn" />
        </root>
        <root level="ERROR">
            <appender-ref ref="file-error" />
        </root>
        <root level="INFO">
            <appender-ref ref="file-info" />
        </root>
    </springProfile>
</configuration>
